{"version":3,"file":"xlsx-calc.js","mappings":"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","sources":["webpack://xlsx-calc/webpack/universalModuleDefinition","webpack://xlsx-calc/./src/Calculator.js","webpack://xlsx-calc/./src/Exp.js","webpack://xlsx-calc/./src/LazyValue.js","webpack://xlsx-calc/./src/Range.js","webpack://xlsx-calc/./src/RawValue.js","webpack://xlsx-calc/./src/RefValue.js","webpack://xlsx-calc/./src/UserFnExecutor.js","webpack://xlsx-calc/./src/UserRawFnExecutor.js","webpack://xlsx-calc/./src/col_str_2_int.js","webpack://xlsx-calc/./src/dynamic_array_compatible.js","webpack://xlsx-calc/./src/errors.js","webpack://xlsx-calc/./src/exec_formula.js","webpack://xlsx-calc/./src/expression_builder.js","webpack://xlsx-calc/./src/find_all_cells_with_formulas.js","webpack://xlsx-calc/./src/formulas-raw.js","webpack://xlsx-calc/./src/formulas.js","webpack://xlsx-calc/./src/getSanitizedSheetName.js","webpack://xlsx-calc/./src/index.js","webpack://xlsx-calc/./src/int_2_col_str.js","webpack://xlsx-calc/./src/str_2_val.js","webpack://xlsx-calc/./src/utils.js","webpack://xlsx-calc/webpack/bootstrap","webpack://xlsx-calc/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","\"use strict\";\n\nconst RawValue = require('./RawValue.js');\nconst str_2_val = require('./str_2_val.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\n\nclass Calculator {\n    \n    constructor(workbook, exec_formula) {\n        this.workbook = workbook;\n        this.expressions = [];\n        this.exec_formula = exec_formula;\n        this.variables = {};\n        this.formulas = find_all_cells_with_formulas(workbook, exec_formula);\n        for (let i = this.formulas.length - 1; i >= 0; i--) {\n            let exp = exec_formula.build_expression(this.formulas[i]);\n            this.expressions.push(exp);\n        }\n        this.calcNames();\n    }\n    \n    setVar(var_name, value) {\n        let variable = this.variables[var_name];\n        if (variable) {\n            variable.setValue(value);\n        } else {\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, var_name, value);\n            });\n        }\n    }\n    \n    getVars() {\n        let vars = {};\n        for (let k in this.variables) {\n            vars[k] = this.variables[k].calc();\n        }\n        return vars;\n    }\n    \n    calcNames() {\n        if (!this.workbook || !this.workbook.Workbook || !this.workbook.Workbook.Names) {\n            return;\n        }\n        this.workbook.Workbook.Names.forEach(item => {\n            let val = this.getRef(item.Ref);\n            this.variables[item.Name] = val;\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, item.Name);\n            });\n        });\n    }\n    \n    getRef(ref_name) {\n        if (!this.formulas.length) {\n            throw new Error(\"No formula found.\");\n        }\n        let first_formula = this.formulas[0];\n        let formula_ref = first_formula.formula_ref;\n        let formula = {\n            formula_ref: formula_ref,\n            wb: this.workbook,\n            exec_formula: this.exec_formula\n        };\n        return str_2_val(ref_name, formula);\n    }\n    \n    setVarOfExpression(exp, var_name, value) {\n        for (let i = 0; i < exp.args.length; i++) {\n            let arg = exp.args[i];\n            if (arg === var_name) {\n                exp.args[i] = this.variables[var_name] || (this.variables[var_name] = new RawValue(value));\n            } else if (typeof arg === 'object' && (arg.name === 'Expression' || arg.name === 'UserFn')) {\n                this.setVarOfExpression(arg, var_name, value);\n            }\n        }\n    }\n    \n    execute() {\n        this.expressions.forEach(exp => {\n            exp.update_cell_value();\n        });\n    }\n}\n\nmodule.exports = Calculator;","\"use strict\";\n\nconst RawValue = require(\"./RawValue.js\");\nconst Range = require(\"./Range.js\");\nconst str_2_val = require(\"./str_2_val.js\");\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\nconst col_str_2_int = require(\"./col_str_2_int.js\");\nconst int_2_col_str = require(\"./int_2_col_str.js\");\nconst dynamic_array_compatible = require(\"./dynamic_array_compatible.js\");\nconst { getErrorValueByMessage } = require(\"./errors\");\nvar exp_id = 0;\n\nfunction isMatrix(obj) {\n  return Array.isArray(obj) && (obj.length === 0 || Array.isArray(obj[0]));\n}\n\nmodule.exports = function Exp(formula) {\n  var self = this;\n  self.id = ++exp_id;\n  self.args = [];\n  self.name = \"Expression\";\n  self.update_cell_value = update_cell_value;\n  self.formula = formula;\n\n  function update_cell_value() {\n    try {\n      formula.cell.v = self.calc();\n      formula.cell.t = getCellType(formula.cell.v);\n      if (isMatrix(formula.cell.v)) {\n        const array = formula.cell.v;\n        formula.cell.v = undefined;\n        let cellsName = formula.name;\n        let colAndRow = cellsName.match(/([A-Z]+)([0-9]+)/);\n        let colNumber = col_str_2_int(colAndRow[1]);\n        let rowNumber = +colAndRow[2];\n        for (let i = 0; i < array.length; i++) {\n          const newCellNumber = rowNumber + i;\n          for (let j = 0; j < array[i].length; j++) {\n            const newCellValue = array[i][j];\n            const destinationColumn = j + colNumber;\n            const destinationCellName =\n              int_2_col_str(destinationColumn) + newCellNumber;\n            let cell = formula.sheet[destinationCellName];\n            if (!cell) {\n              cell = {};\n              formula.sheet[destinationCellName] = cell;\n            }\n            applyCellValue(cell, newCellValue);\n          }\n        }\n      } else if (typeof formula.cell.v === \"object\") {\n        const { t, v, l } = formula.cell.v || {};\n        formula.cell.v = v;\n        formula.cell.t = t;\n        formula.cell.l = l;\n      }\n    } catch (e) {\n      if (!applyCellError(formula.cell, e)) {\n        throw e;\n      }\n    } finally {\n      formula.status = \"done\";\n    }\n  }\n\n  function applyCellError(cell, cellValueOrError) {\n    const error = cellValueOrError || {};\n    cell.t = \"e\";\n    const errorValue = getErrorValueByMessage(error.message);\n    if (errorValue !== undefined) {\n      cell.w = error.message;\n      cell.v = errorValue;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function applyCellValue(cell, cellValueOrError) {\n    if (cellValueOrError instanceof Error) {\n      applyCellError(cell, cellValueOrError);\n    } else {\n      const newCellType = getCellType(cellValueOrError);\n      cell.v = cellValueOrError;\n      if (newCellType) cell.t = newCellType;\n    }\n  }\n\n  function getCellType(cellValue) {\n    if (typeof cellValue === \"string\") {\n      return \"s\";\n    } else if (typeof cellValue === \"number\") {\n      return \"n\";\n    } else if (cellValue instanceof Error) {\n      return \"e\";\n    }\n  }\n\n  function isEmpty(value) {\n    return value === undefined || value === null || value === \"\";\n  }\n\n  function checkVariable(obj) {\n    if (typeof obj.calc !== \"function\") {\n      throw new Error(\"Undefined \" + obj);\n    }\n  }\n\n  function exec(op, args, fn) {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i] === op) {\n        try {\n          if (i === 0 && op === \"+\") {\n            checkVariable(args[i + 1]);\n            let r = args[i + 1].calc();\n            args.splice(i, 2, new RawValue(r));\n          } else {\n            checkVariable(args[i - 1]);\n            checkVariable(args[i + 1]);\n\n            let a = args[i - 1].calc();\n            let b = args[i + 1].calc();\n            if (a instanceof Error) {\n              throw a;\n            }\n            if (b instanceof Error) {\n              throw b;\n            }\n\n            let r = fn(a, b);\n            args.splice(i - 1, 3, new RawValue(r));\n            i--;\n          }\n        } catch (e) {\n          // console.log('[Exp.js] - ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message);\n          throw e;\n        }\n      }\n    }\n  }\n\n  function toNegative(value) {\n    return Array.isArray(value) ? value.map(toNegative) : -value;\n  }\n\n  function exec_minus(args) {\n    for (var i = args.length; i--; ) {\n      if (args[i] === \"-\") {\n        checkVariable(args[i + 1]);\n        var b = args[i + 1].calc();\n        if (i > 0 && typeof args[i - 1] !== \"string\") {\n          args.splice(i, 1, \"+\");\n          if (b instanceof Date) {\n            b = Date.parse(b);\n            checkVariable(args[i - 1]);\n            var a = args[i - 1].calc();\n            if (a instanceof Date) {\n              a = Date.parse(a) / MS_PER_DAY;\n              b = b / MS_PER_DAY;\n              args.splice(i - 1, 1, new RawValue(a));\n            }\n          }\n          args.splice(i + 1, 1, new RawValue(toNegative(b)));\n        } else {\n          if (typeof b === \"string\") {\n            throw new Error(\"#VALUE!\");\n          }\n          args.splice(i, 2, new RawValue(toNegative(b)));\n        }\n      }\n    }\n  }\n\n  function execNegativePow(args, fn) {\n    for (var i = 0; i < args.length - 2; i++) {\n      if (\"^\" === args[i] && \"-\" === args[i + 1]) {\n        try {\n          checkVariable(args[i - 1]);\n          checkVariable(args[i + 2]);\n\n          let a = args[i - 1].calc();\n          let b = args[i + 2].calc();\n          if (Array.isArray(a)) {\n            a = a[getCurrentCellIndex() - 1][0];\n          }\n          if (Array.isArray(b)) {\n            b = b[getCurrentCellIndex() - 1][0];\n          }\n\n          let r = fn(a, b);\n          args.splice(i - 1, 4, new RawValue(r));\n          i--;\n        } catch (e) {\n          // console.log('[Exp.js] - ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message);\n          throw e;\n        }\n      }\n    }\n  }\n\n  self.calc = function () {\n    let args = self.args.concat();\n    execNegativePow(args, function (a, b) {\n      return Math.pow(+a, 0 - b);\n    });\n    exec(\n      \"^\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        return Math.pow(+a, +b);\n      })\n    );\n    exec_minus(args);\n    exec(\n      \"/\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        if (b == 0) {\n          throw Error(\"#DIV/0!\");\n        }\n        return +a / +b;\n      })\n    );\n    exec(\n      \"*\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        return +a * +b;\n      })\n    );\n    exec(\n      \"+\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        if (a instanceof Date && typeof b === \"number\") {\n          b = b * MS_PER_DAY;\n        }\n        return +a + +b;\n      })\n    );\n    exec(\n      \"&\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        var string = \"\";\n        if (a !== null) {\n          string += a;\n        }\n        if (b !== null) {\n          string += b;\n        }\n        return string;\n      })\n    );\n    exec(\n      \"<\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        return a < b;\n      })\n    );\n    exec(\n      \">\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        return a > b;\n      })\n    );\n    exec(\n      \">=\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        return a >= b;\n      })\n    );\n    exec(\n      \"<=\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        return a <= b;\n      })\n    );\n    exec(\n      \"<>\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        if (a instanceof Date && b instanceof Date) {\n          return a.getTime() !== b.getTime();\n        }\n        if (isEmpty(a) && isEmpty(b)) {\n          return false;\n        }\n        return a !== b;\n      })\n    );\n    exec(\n      \"=\",\n      args,\n      dynamic_array_compatible(function (a, b) {\n        if (a instanceof Date && b instanceof Date) {\n          return a.getTime() === b.getTime();\n        }\n        if (isEmpty(a) && isEmpty(b)) {\n          return true;\n        }\n        if ((a == null && b === 0) || (a === 0 && b == null)) {\n          return true;\n        }\n        if (\n          typeof a === \"string\" &&\n          typeof b === \"string\" &&\n          a.toLowerCase() === b.toLowerCase()\n        ) {\n          return true;\n        }\n        return a === b;\n      })\n    );\n    if (args.length == 1) {\n      if (typeof args[0].calc !== \"function\") {\n        return args[0];\n      } else {\n        return args[0].calc();\n      }\n    }\n  };\n\n  var last_arg;\n  self.push = function (buffer) {\n    if (buffer) {\n      var v = str_2_val(buffer, formula);\n      if (\n        (v === \"=\" && (last_arg == \">\" || last_arg == \"<\")) ||\n        (last_arg == \"<\" && v === \">\")\n      ) {\n        self.args[self.args.length - 1] += v;\n      } else {\n        self.args.push(v);\n      }\n      last_arg = v;\n      //console.log(self.id, '-->', v);\n    }\n  };\n};\n","\"use strict\";\n\nmodule.exports = function LazyValue(fn) {\n    this.calc = function() {\n        return fn();\n    };\n};\n","\"use strict\";\n\nconst col_str_2_int = require('./col_str_2_int.js');\nconst int_2_col_str = require('./int_2_col_str.js');\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\n\nmodule.exports = function Range(str_expression, formula) {\n    this.parse = function() {\n        var range_expression, sheet_name, sheet;\n        if (str_expression.indexOf('!') != -1) {\n            var aux = str_expression.split('!');\n            sheet_name = getSanitizedSheetName(aux[0]);\n            range_expression = aux[1];\n        }\n        else {\n            sheet_name = formula.sheet_name;\n            range_expression = str_expression;\n        }\n        sheet = formula.wb.Sheets[sheet_name];\n        var arr = range_expression.split(':');\n        var min_row = parseInt(arr[0].replace(/^[A-Z]+/, ''), 10) || 0;\n        var str_max_row = arr[1].replace(/^[A-Z]+/, '');\n        var max_row;\n        if (str_max_row === '' && sheet['!ref']) {\n            str_max_row = (sheet['!ref'].includes(':') ? sheet['!ref'].split(':')[1] : sheet['!ref']).replace(/^[A-Z]+/, '');\n        }\n        // the max is 1048576, but TLE\n        max_row = parseInt(str_max_row == '' ? '500000' : str_max_row, 10);\n        var min_col = col_str_2_int(arr[0]);\n        var max_col = col_str_2_int(arr[1]);\n        return {\n            sheet_name: sheet_name,\n            sheet: sheet,\n            min_row: min_row,\n            min_col: min_col,\n            max_row: max_row,\n            max_col: max_col,\n        };\n    };\n    this.calc = function() {\n        var results = this.parse();\n        var sheet_name = results.sheet_name;\n        var sheet = results.sheet;\n        var min_row = results.min_row;\n        var min_col = results.min_col;\n        var max_row = results.max_row;\n        var max_col = results.max_col;\n        var matrix = [];\n        for (var i = min_row; i <= max_row; i++) {\n            var row = [];\n            matrix.push(row);\n            for (var j = min_col; j <= max_col; j++) {\n                var cell_name = int_2_col_str(j) + i;\n                var cell_full_name = sheet_name + '!' + cell_name;\n                var formula_ref = formula.formula_ref[cell_full_name];\n                if (formula_ref) {\n                    if (formula_ref.status === 'new') {\n                        formula.exec_formula(formula_ref);\n                    } else if (formula_ref.status === 'working') {\n                        if (formula_ref.cell.f.includes(formula.name)) {\n                            throw new Error('Circular ref');\n                        }\n                        formula.exec_formula(formula_ref);\n                    }\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(new Error(sheet[cell_name].w));\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else if (sheet[cell_name]) {\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(new Error(sheet[cell_name].w));\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else {\n                    row.push(null);\n                }\n            }\n        }\n        return matrix;\n    };\n};\n","\"use strict\";\n\nmodule.exports = function RawValue(value) {\n    this.setValue = function(v) {\n        value = v;\n    };\n    this.calc = function() {\n        return value;\n    };\n};\n","\"use strict\";\n\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\n\nmodule.exports = function RefValue(str_expression, formula) {\n    var self = this;\n    this.name = 'RefValue';\n    this.str_expression = str_expression;\n    this.formula = formula;\n\n    self.parseRef = function() {\n        var sheet, sheet_name, cell_name, cell_full_name;\n        if (str_expression.indexOf('!') != -1) {\n            var aux = str_expression.split('!');\n            sheet_name = getSanitizedSheetName(aux[0]);\n            sheet = formula.wb.Sheets[sheet_name];\n            cell_name = aux[1];\n        }\n        else {\n            sheet = formula.sheet;\n            sheet_name = formula.sheet_name;\n            cell_name = str_expression;\n        }\n        if (!sheet) {\n            throw Error(\"Sheet \" + sheet_name + \" not found.\");\n        }\n        cell_full_name = sheet_name + '!' + cell_name;\n        return {\n            sheet: sheet,\n            sheet_name: sheet_name,\n            cell_name: cell_name,\n            cell_full_name: cell_full_name\n        };\n    };\n\n    this.calc = function() {\n        var resolved_ref = self.parseRef();\n        var sheet = resolved_ref.sheet;\n        var cell_name = resolved_ref.cell_name;\n        var cell_full_name = resolved_ref.cell_full_name;\n        var ref_cell = sheet[cell_name];\n        if (!ref_cell) {\n            return null;\n        }\n        var formula_ref = formula.formula_ref[cell_full_name];\n        if (formula_ref) {\n            if (formula_ref.status === 'new') {\n                formula.exec_formula(formula_ref);\n                if (ref_cell.t === 'e') {\n                    console.log('ref is an error with new formula', cell_full_name, ref_cell.w);\n                    throw new Error(ref_cell.w);\n                }\n                return ref_cell.v;\n            }\n            else if (formula_ref.status === 'working') {\n                if (ref_cell.f.includes(formula.name)) {\n                    throw new Error('Circular ref');\n                }\n                formula.exec_formula(formula_ref);\n                return this.calc();\n            }\n            else if (formula_ref.status === 'done') {\n                if (ref_cell.t === 'e') {\n                    console.log('ref is an error after formula eval', cell_full_name, ref_cell.w);\n                    throw new Error(ref_cell.w);\n                }\n                return ref_cell.v;\n            }\n        }\n        else {\n            if (ref_cell.t === 'e') {\n                console.log('ref is an error with no formula', cell_name);\n                throw new Error(ref_cell.w);\n            }\n            return ref_cell.v;\n        }\n    };\n};\n","\"use strict\";\n\nconst { getErrorValueByMessage } = require('./errors')\n\nmodule.exports = function UserFnExecutor(user_function) {\n    var self = this;\n    self.name = 'UserFn';\n    self.args = [];\n    self.calc = function () {\n        var result;\n        try {\n            result = user_function.apply(self, self.args.map(f => f.calc()));\n            if (result instanceof Error) {\n                throw result;\n            }\n        } catch (e) {\n            const errorValue = getErrorValueByMessage(e.message)\n            if (user_function.name === 'is_blank'\n                && errorValue !== undefined) {\n                // is_blank applied to an error cell doesn't propagate the error\n                result = 0;\n            }\n            else if (user_function.name === 'iserror'\n                && errorValue !== undefined) {\n                // iserror applied to an error doesn't propagate the error and returns true\n                result = true;\n            }\n            else {\n                throw e;\n            }\n        }\n        return result;\n    };\n    self.push = function (buffer) {\n        self.args.push(buffer);\n    };\n};","\"use strict\";\n\nmodule.exports = function UserRawFnExecutor(user_function, formula) {\n    var self = this;\n    self.name = 'UserRawFn';\n    self.args = [];\n    self.calc = function() {\n        try {\n            return user_function.apply(self, self.args);\n        } catch(e) {\n            // debug\n            // console.log('----------------', user_function);\n            // console.log(formula.name);\n            // console.log(self);\n            throw e;\n        }\n    };\n    self.push = function(buffer) {\n        self.args.push(buffer);\n    };\n};\n","\"use strict\";\n\nmodule.exports = function col_str_2_int(col_str) {\n    var r = 0;\n    var colstr = col_str.replace(/[0-9]+$/, '');\n    for (var i = colstr.length; i--;) {\n        r += Math.pow(26, colstr.length - i - 1) * (colstr.charCodeAt(i) - 64);\n    }\n    return r - 1;\n};","const error = require('./errors');\n\nmodule.exports = function dynamic_array_compatible(fn) {\n    return function () {\n        var hasArray = false;\n        var parameters = [];\n        var numberOfRows = [];\n        var numberOfColumns = [];\n        for (var i = 0, length = arguments.length; i < length; i++) {\n            var argument = arguments[i];\n            var isArray = Array.isArray(argument);\n            if (isArray) {\n                hasArray = true;\n            }\n            var parameter = isArray ? argument.map(value => Array.isArray(value) ? value : [value]) : [[argument]];\n            parameters[i] = parameter;\n            numberOfRows[i] = parameter.length;\n            numberOfColumns[i] = parameter[0].length;\n        }\n        var maxNumberOfRows = Math.max.apply(null, numberOfRows);\n        var maxNumberOfColumns = Math.max.apply(null, numberOfColumns);\n        var results = [];\n        for (var x = 0; x < maxNumberOfRows; x++) {\n            results[x] = [];\n            for (var y = 0; y < maxNumberOfColumns; y++) {\n                var hasError = false;\n                var elements = [];\n                for (var i = 0, length = parameters.length; i < length; i++) {\n                    var element = parameters[i];\n                    var xKey = numberOfRows[i] === 1 ? 0 : x;\n                    var yKey = numberOfColumns[i] === 1 ? 0 : y;\n                    if (xKey in element) {\n                        element = element[xKey];\n                        if (yKey in element) {\n                            element = element[yKey];\n                        } else {\n                            hasError = true;\n                            break;\n                        }\n                    } else {\n                        hasError = true;\n                        break;\n                    }\n                    elements[i] = element;\n                }\n                results[x][y] = hasError ? error.na : fn.apply(null, elements);\n            }\n        }\n        return hasArray ? results : results[0][0];\n    }\n};\n","const nil = new Error('#NULL!')\nconst div0 = new Error('#DIV/0!')\nconst value = new Error('#VALUE!')\nconst ref = new Error('#REF!')\nconst name = new Error('#NAME?')\nconst num = new Error('#NUM!')\nconst na = new Error('#N/A')\nconst error = new Error('#ERROR!')\nconst data = new Error('#GETTING_DATA')\nconst calc = new Error('#CALC!')\n\nconst ERROR_MESSAGE_TO_VALUE = {\n    '#NULL!': 0x00,\n    '#DIV/0!': 0x07,\n    '#VALUE!': 0x0F,\n    '#REF!': 0x17,\n    '#NAME?': 0x1D,\n    '#NUM!': 0x24,\n    '#N/A': 0x2A,\n    '#GETTING_DATA': 0x2B,\n    '#CALC!': 0x00, // todo: set the correct error code\n};\n\nfunction getErrorValueByMessage(errorMessage) {\n    return ERROR_MESSAGE_TO_VALUE[errorMessage]\n}\n\nmodule.exports = {\n    nil,\n    div0,\n    value,\n    ref,\n    name,\n    num,\n    na,\n    error,\n    data,\n    calc,\n    getErrorValueByMessage,\n}","\"use strict\";\n\nconst expression_builder = require('./expression_builder.js');\n\nlet xlsx_Fx = {};\nlet xlsx_raw_Fx = {};\n\nimport_functions(require('./formulas.js'));\nimport_raw_functions(require('./formulas-raw.js'));\n\nfunction import_raw_functions(functions, opts) {\n    for (var key in functions) {\n        xlsx_raw_Fx[key] = functions[key];\n    }\n}\n\nfunction import_functions(formulajs, opts) {\n    opts = opts || {};\n    var prefix = opts.prefix || '';\n    for (var key in formulajs) {\n        var obj = formulajs[key];\n        if (typeof(obj) === 'function') {\n            if (opts.override || !xlsx_Fx[prefix + key]) {\n                xlsx_Fx[prefix + key] = obj;\n            }\n            // else {\n            //     console.log(prefix + key, 'already exists.');\n            //     console.log('  to override:');\n            //     console.log('    XLSX_CALC.import_functions(yourlib, {override: true})');\n            // }\n        }\n        else if (typeof(obj) === 'object') {\n            import_functions(obj, my_assign(opts, { prefix: key + '.' }));\n        }\n    }\n}\n\nfunction my_assign(dest, source) {\n    var obj = JSON.parse(JSON.stringify(dest));\n    for (var k in source) {\n        obj[k] = source[k];\n    }\n    return obj;\n}\n\nfunction build_expression(formula) {\n    return expression_builder(formula, {xlsx_Fx: xlsx_Fx, xlsx_raw_Fx: xlsx_raw_Fx});\n}\n\nfunction exec_formula(formula) {\n    let root_exp = build_expression(formula);\n    root_exp.update_cell_value();\n}\n\nexec_formula.set_fx = function set_fx(name, fn) {\n    xlsx_Fx[name] = fn;\n};\n\nexec_formula.exec_fx = function exec_fx(name, args) {\n    return xlsx_Fx[name].apply(this, args);\n};\n\nexec_formula.localizeFunctions = function(dic) {\n    for (let newName in dic) {\n        let oldName = dic[newName];\n        if (xlsx_Fx[oldName]) {\n            xlsx_Fx[newName] = xlsx_Fx[oldName];\n        }\n        if (xlsx_raw_Fx[oldName]) {\n            xlsx_raw_Fx[newName] = xlsx_raw_Fx[oldName];\n        }\n    }\n};\n\nexec_formula.import_functions = import_functions;\nexec_formula.import_raw_functions = import_raw_functions;\nexec_formula.build_expression = build_expression;\nexec_formula.xlsx_Fx = xlsx_Fx;\nmodule.exports = exec_formula;\n","const Exp = require('./Exp.js');\nconst RawValue = require('./RawValue.js');\nconst UserFnExecutor = require('./UserFnExecutor.js');\nconst UserRawFnExecutor = require('./UserRawFnExecutor.js');\nconst common_operations = {\n    '*': 'multiply',\n    '+': 'plus',\n    '-': 'minus',\n    '/': 'divide',\n    '^': 'power',\n    '&': 'concat',\n    '<': 'lt',\n    '>': 'gt',\n    '=': 'eq'\n};\n\nmodule.exports = function expression_builder(formula, opts) {\n    formula.status = 'working';\n\n    var xlsx_Fx = opts.xlsx_Fx || {};\n    var xlsx_raw_Fx = opts.xlsx_raw_Fx || {};\n\n    var root_exp;\n    var str_formula = formula.cell.f;\n    if (str_formula[0] == '=') {\n        str_formula = str_formula.substr(1);\n    }\n    var exp_obj = root_exp = new Exp(formula);\n    var buffer = '',\n        was_string = false;\n    var fn_stack = [{\n        exp: exp_obj\n    }];\n\n    /**\n     * state pattern in functional way\n     */\n    function string(char) {\n        if (char === '\"') {\n            exp_obj.push(new RawValue(buffer));\n            was_string = true;\n            buffer = '';\n            state = start;\n        } else {\n            buffer += char;\n        }\n    }\n\n    function single_quote(char) {\n        if (char === \"'\") {\n            state = start;\n        }\n        buffer += char;\n    }\n\n    function ini_parentheses() {\n        var o, trim_buffer = buffer.trim(),\n            special = xlsx_Fx[trim_buffer];\n        var special_raw = xlsx_raw_Fx[trim_buffer];\n        if (special_raw) {\n            special = new UserRawFnExecutor(special_raw, formula);\n        }\n        else if (special) {\n            special = new UserFnExecutor(special, formula);\n        }\n        else if (trim_buffer) {\n            //Error: \"Worksheet 1\"!D145: Function INDEX not found\n            throw new Error('\"' + formula.sheet_name + '\"!' + formula.name + ': Function ' + buffer + ' not found');\n        }\n        o = new Exp(formula);\n        fn_stack.push({\n            exp: o,\n            special: special\n        });\n        exp_obj = o;\n        buffer = '';\n    }\n\n    function end_parentheses() {\n        var v, stack = fn_stack.pop();\n        exp_obj = stack.exp;\n        exp_obj.push(buffer);\n        v = exp_obj;\n        buffer = '';\n        exp_obj = fn_stack[fn_stack.length - 1].exp;\n        if (stack.special) {\n            stack.special.push(v);\n            exp_obj.push(stack.special);\n        }\n        else {\n            exp_obj.push(v);\n        }\n    }\n\n    function add_operation(char) {\n        if (!was_string) {\n            exp_obj.push(buffer);\n        }\n        was_string = false;\n        exp_obj.push(char);\n        buffer = '';\n    }\n\n    function start(char) {\n        if (char === '\"') {\n            state = string;\n            buffer = '';\n        } else if (char === \"'\") {\n            state = single_quote;\n            buffer = \"'\";\n        } else if (char === '(') {\n            ini_parentheses();\n        } else if (char === ')') {\n            end_parentheses();\n        } else if (common_operations[char]) {\n            add_operation(char);\n        } else if (char === ',' && fn_stack[fn_stack.length - 1].special) {\n            was_string = false;\n            fn_stack[fn_stack.length - 1].exp.push(buffer);\n            fn_stack[fn_stack.length - 1].special.push(fn_stack[fn_stack.length - 1].exp);\n            fn_stack[fn_stack.length - 1].exp = exp_obj = new Exp(formula);\n            buffer = '';\n        } else if (char !== ' ') {\n            buffer += char;\n        }\n    }\n    \n    var state = start;\n\n    for (var i = 0; i < str_formula.length; i++) {\n        state(str_formula[i]);\n    }\n    root_exp.push(buffer);\n    return root_exp;\n\n}","\"use strict\";\n\nmodule.exports = function find_all_cells_with_formulas(wb, exec_formula) {\n    let formula_ref = {};\n    let cells = [];\n    for (let sheet_name in wb.Sheets) {\n        let sheet = wb.Sheets[sheet_name];\n        for (let cell_name in sheet) {\n            if (sheet[cell_name] && sheet[cell_name].f) {\n                let formula = formula_ref[sheet_name + '!' + cell_name] = {\n                    formula_ref: formula_ref,\n                    wb: wb,\n                    sheet: sheet,\n                    sheet_name: sheet_name,\n                    cell: sheet[cell_name],\n                    name: cell_name,\n                    status: 'new',\n                    exec_formula: exec_formula\n                };\n                cells.push(formula);\n            }\n        }\n    }\n    return cells;\n};\n","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst dynamic_array_compatible = require('./dynamic_array_compatible.js');\nconst RawValue = require('./RawValue.js');\nconst Range = require('./Range.js');\nconst RefValue = require('./RefValue.js');\n\nfunction raw_offset(cell_ref, rows, columns, height, width) {\n    height = (height || new RawValue(1)).calc();\n    width = (width || new RawValue(1)).calc();\n    if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\n        var ref_value = cell_ref.args[0];\n        var parsed_ref = ref_value.parseRef();\n        var col = col_str_2_int(parsed_ref.cell_name) + columns.calc();\n        var col_str = int_2_col_str(col);\n        var row = +parsed_ref.cell_name.replace(/^[A-Z]+/g, '') + rows.calc();\n        var cell_name = parsed_ref.sheet_name + '!' + col_str + row;\n        if (height === 1 && width === 1) {\n            return new RefValue(cell_name, ref_value.formula).calc();\n        }\n        else {\n            var end_range_col = int_2_col_str(col + width - 1);\n            var end_range_row = row + height - 1;\n            var end_range = end_range_col + end_range_row;\n            var str_expression = cell_name + ':' + end_range;\n            return new Range(str_expression, ref_value.formula).calc();\n        }\n    }\n}\n\nfunction row(cell_ref) {\n    if (cell_ref.args.length === 0) {\n        var row = +cell_ref.formula.name.replace(/^[A-Z]+/g, '');\n        return row;\n    } else if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\n        var ref_value = cell_ref.args[0];\n        var parsed_ref = ref_value.parseRef();\n        var row = +parsed_ref.cell_name.replace(/^[A-Z]+/g, '');\n        return row;\n    } else if (cell_ref.args.length === 1 && cell_ref.args[0] instanceof Range) {\n        var results = cell_ref.args[0].parse();\n        var min_row = results.min_row;\n        var max_row = results.max_row;\n        var rows = [];\n        for (var i = min_row; i <= max_row; i++) {\n            rows.push(i);\n        }\n        return rows;\n    }\n}\n\nfunction column(cell_ref) {\n    if (cell_ref.args.length === 0) {\n        var col = col_str_2_int(cell_ref.formula.name);\n        return col + 1;\n    } else if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\n        var ref_value = cell_ref.args[0];\n        var parsed_ref = ref_value.parseRef();\n        var col = col_str_2_int(parsed_ref.cell_name);\n        return col + 1;\n    }  else if (cell_ref.args.length === 1 && cell_ref.args[0] instanceof Range) {\n        var results = cell_ref.args[0].parse();\n        var min_col = results.min_col;\n        var max_col = results.max_col;\n        var cols = [];\n        for (var i = min_col; i <= max_col; i++) {\n            cols.push(i + 1);\n        }\n        return cols;\n    }\n}\n\nfunction iferror(cell_ref, onerrorvalue) {\n    try {\n        var value = cell_ref.calc();\n        if (typeof value === 'number' && (isNaN(value) || value === Infinity || value === -Infinity)) {\n            return onerrorvalue.calc();\n        }\n        return value;\n    } catch (e) {\n        return onerrorvalue.calc();\n    }\n}\n\nfunction _if(condition, _then, _else) {\n    var condition_results;\n    var then_results;\n    var else_results;\n    try {\n        condition_results = condition.calc();\n    } catch (e) {\n        condition_results = e;\n    }\n    try {\n        then_results = _then.calc();\n    } catch (e) {\n        then_results = e;\n    }\n    try {\n        else_results = typeof _else === 'undefined' ? false : _else.calc();\n    } catch (e) {\n        else_results = e;\n    }\n    return dynamic_array_compatible(function (condition_result, then_result, else_result) {\n        if (condition_result instanceof Error) {\n            return condition_result;\n        }\n        return condition_result ? then_result : else_result;\n    })(condition_results, then_results, else_results);\n}\n\nfunction and() {\n    for (var i = 0; i < arguments.length; i++) {\n        if (!arguments[i].calc()) return false;\n    }\n    return true;\n}\n\nfunction _or() {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i].calc()) return true;\n    }\n    return false;\n}\n\nfunction transpose(expressionWithRange) {\n    let range = expressionWithRange.args[0];\n    // console.log(expressionWithRange.args[0])\n    // console.log(expressionWithRange.formula.wb.Sheets.Sheet1)\n    // console.log(range.calc())\n    let matrix = range.calc();\n    let cellName = expressionWithRange.formula.name;\n    let colRow = cellName.match(/([A-Z]+)([0-9]+)/);\n    let sheet = expressionWithRange.formula.sheet;\n    // console.log(colRow[1], colRow[2]);\n    // console.log(col_str_2_int(colRow[1]));\n    let colNumber = col_str_2_int(colRow[1]);\n    let rowNumber = +colRow[2];\n    for (let i = 0; i < matrix.length; i++) {\n        let matrixRow = matrix[i];\n        for (let j = 0; j < matrixRow.length; j++) {\n            let destinationColumn = colNumber + i;\n            let destinationRow = rowNumber + j;\n            let value = matrixRow[j];\n            // console.log(int_2_col_str(destinationColumn), destinationRow, value);\n            sheet[int_2_col_str(destinationColumn) + destinationRow].v = value;\n        }\n    }\n    // console.log(expressionWithRange.formula.name)\n    return matrix[0][0];\n}\n\nmodule.exports = {\n    'OFFSET': raw_offset,\n    'ROW': row,\n    'COLUMN': column,\n    'IFERROR': iferror,\n    'IF': _if,\n    'AND': and,\n    'OR': _or,\n    'TRANSPOSE': transpose,\n};\n","\"use strict\";\nconst utils = require('./utils')\nconst error = require('./errors')\n\n// +---------------------+\n// | FORMULAS REGISTERED |\n// +---------------------+\nlet formulas = {\n    'FLOOR': Math.floor,\n    '_xlfn.FLOOR.MATH': Math.floor,\n    'FLOOR.MATH': Math.floor,\n    'ABS': Math.abs,\n    'SQRT': Math.sqrt,\n    'VLOOKUP': vlookup,\n    'MAX': max,\n    'SUM': sum,\n    'MIN': min,\n    'CONCATENATE': concatenate,\n    'PMT': pmt,\n    'COUNTA': counta,\n    'IRR': irr,\n    'NORM.INV': normsInv,\n    '_xlfn.NORM.INV': normsInv,\n    'STDEV': stDeviation,\n    'AVERAGE': avg,\n    'EXP': EXP,\n    'LN': Math.log,\n    '_xlfn.VAR.P': var_p,\n    'VAR.P': var_p,\n    '_xlfn.COVARIANCE.P': covariance_p,\n    'COVARIANCE.P': covariance_p,\n    'TRIM': trim,\n    'LEN': len,\n    'ISBLANK': is_blank,\n    'HLOOKUP': hlookup,\n    'INDEX': index,\n    'MATCH': match,\n    'SUMPRODUCT': sumproduct,\n    'ISNUMBER': isnumber,\n    'TODAY': today,\n    'ISERROR': iserror,\n    'TIME': time,\n    'DAY': day,\n    'MONTH': month,\n    'YEAR': year,\n    'RIGHT': right,\n    'LEFT': left,\n    'IFS': ifs,\n    'ROUND': round,\n    'CORREL': correl, // missing test\n    'SUMIF': sumif, // missing test,\n    'CHOOSE': choose,\n    'SUBSTITUTE': substitute,\n    'CEILING': ceiling,\n    'FILTER': throwErrors(FILTER),\n    'DATEDIF': datediff,\n    'EOMONTH': eomonth,\n};\n\nfunction choose(option) {\n    return arguments[option];\n}\n\nfunction sumif(){\n\n    let elementToSum = arguments[1];\n    let sumResult = 0;\n\n    [].slice.call(arguments)[0][0].forEach((elt,key) =>{\n        \n        if (elt!==null){\n            //if the element is not a string but a number, number has no replace function, so converting to string.\n            elt = elt.toString();\n            if( elt.replace(/\\'/g, \"\") === elementToSum){\n                if (!isNaN([].slice.call(arguments)[2][0][key])){\n                    sumResult += [].slice.call(arguments)[2][0][key]\n                }\n            }\n        }\n    });\n    return sumResult\n}\n\nfunction correl(a,b){\n\n    a = getArrayOfNumbers(a);\n    b = getArrayOfNumbers(b);\n\n    if (a.length !== b.length) {\n        return 'N/D';\n    }\n    var inv_n = 1.0 / (a.length-1);\n    var avg_a = sum.apply(this, a) / a.length;\n    var avg_b = sum.apply(this, b) / b.length;\n    var s = 0.0;\n    var sa = 0;\n    var sb=0;\n    for (var i = 0; i < a.length; i++) {\n        s += (a[i] - avg_a) * (b[i] - avg_b);\n\n        sa+=Math.pow(a[i],2);\n        sb+=Math.pow(b[i],2);\n    }\n\n    sa=Math.sqrt(sa/inv_n);\n    sb=Math.sqrt(sb/inv_n);\n\n    return s / (inv_n*sa*sb);\n}\n\nfunction round(value, decimalPlaces) {\n    if (arguments.length === 0) throw new Error(\"Err:511\");\n    if (arguments.length === 1) return Math.round(value);\n    let roundMeasure = Math.pow(10, decimalPlaces);\n    return Math.round(roundMeasure*value)/roundMeasure\n}\n\nfunction today() {\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return today;\n}\n\nfunction isnumber(x) {\n    return !isNaN(x);\n}\n\nfunction sumproduct() {\n    var parseNumber = function (string) {\n        if (string === undefined || string === '' || string === null) {\n            return 0;\n        }\n        if (!isNaN(string)) {\n            return parseFloat(string);\n        }\n        return 0;\n    },\n    consistentSizeRanges = function (matrixArray) {\n        var getRowCount = function(matrix = []) {\n                return matrix.length;\n            },\n            getColCount = function(matrix = []) {\n                return matrix[0] && matrix[0].length;\n            },\n            rowCount = getRowCount(matrixArray[0]),\n            colCount = getColCount(matrixArray[0]);\n\n        for (var i = 1; i < matrixArray.length; i++) {\n            if (getRowCount(matrixArray[i]) !== rowCount\n                || getColCount(matrixArray[i]) !== colCount) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    if (!arguments || arguments.length === 0 || !arguments[0]) {\n\n        throw Error('#VALUE!');\n    }\n    if (!consistentSizeRanges(arguments)) {\n        throw Error('#VALUE!');\n    }\n    // throw error if any of the cells passed in arguments is in error\n    for (var i = 0; i < arguments.length; i++) {\n        var row = arguments[i];\n        if (Array.isArray(row)) {\n            for (var j = 0; j < row.length; j++) {\n                var col = row[j];\n                if (Array.isArray(col)) {\n                    for (var k = 0; k < col.length; k++) {\n                        var cell = col[k];\n                        if (cell instanceof Error) {\n                            throw cell;\n                        }\n                    }\n                }\n                else {\n                    var cell = col;\n                    if (cell instanceof Error) {\n                        throw cell;\n                    }\n                }\n            }\n        }\n        else {\n            var cell = row;\n            if (cell instanceof Error) {\n                throw cell;\n            }\n        }\n    }\n\n    var arrays = arguments.length + 1;\n    var result = 0;\n    var product;\n    var k;\n    var _i;\n    var _ij;\n    for (var i = 0; i < arguments[0].length; i++) {\n        if (!(arguments[0][i] instanceof Array)) {\n            product = 1;\n            for (k = 1; k < arrays; k++) {\n                _i = parseNumber(arguments[k - 1][i]);\n\n                product *= _i;\n            }\n            result += product;\n        } else {\n            for (var j = 0; j < arguments[0][i].length; j++) {\n                product = 1;\n                for (k = 1; k < arrays; k++) {\n                    _ij = parseNumber(arguments[k - 1][i][j]);\n\n                    product *= _ij;\n                }\n                result += product;\n            }\n        }\n    }\n    return result;\n}\n\nfunction match_less_than_or_equal(matrix, lookupValue) {\n    var index;\n    var indexValue;\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (matrix[idx] === lookupValue) {\n            return idx + 1;\n        } else if (matrix[idx] < lookupValue) {\n            if (!indexValue) {\n                index = idx + 1;\n                indexValue = matrix[idx];\n            } else if (matrix[idx] > indexValue) {\n                index = idx + 1;\n                indexValue = matrix[idx];\n            }\n        }\n    }\n    if (!index) {\n        throw Error('#N/A');\n    }\n    return index;\n}\n\nfunction match_exactly_string(matrix, lookupValue) {\n    for (var idx = 0; idx < matrix.length; idx++) {\n        lookupValue = lookupValue.replace(/\\?/g, '.');\n        if (Array.isArray(matrix[idx])) {\n            if (matrix[idx].length === 1\n                && typeof matrix[idx][0] === 'string') {\n                    if (matrix[idx][0].toLowerCase() === lookupValue.toLowerCase()) {\n                        return idx + 1;\n                    }\n                }\n        } else if (typeof matrix[idx] === 'string') {\n            if (matrix[idx].toLowerCase() === lookupValue.toLowerCase()) {\n                return idx + 1;\n            }\n        }\n\n    }\n    throw Error('#N/A');\n}\n\nfunction match_exactly_non_string(matrix, lookupValue) {\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (Array.isArray(matrix[idx])) {\n            if (matrix[idx].length === 1) {\n                if (matrix[idx][0] === lookupValue) {\n                    return idx + 1;\n                }\n            }\n        } else if (matrix[idx] === lookupValue) {\n            return idx + 1;\n        }\n    }\n    throw Error('#N/A');\n}\n\n// +---------------------+\n// | THE IMPLEMENTATIONS |\n// +---------------------+\n\n\nfunction match_greater_than_or_equal(matrix, lookupValue) {\n    var index;\n    var indexValue;\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (Array.isArray(matrix[idx]) && matrix[idx].length > 0) {\n            // For array in column\n            if (matrix[idx][0] === lookupValue) {\n                return idx + 1;\n            } else if (matrix[idx][0] > lookupValue) {\n                if (!indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx][0];\n                } else if (matrix[idx][0] < indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx][0];\n                }\n            }\n        } else {\n            // For array in row\n            if (matrix[idx] === lookupValue) {\n                return idx + 1;\n            } else if (matrix[idx] > lookupValue) {\n                if (!indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx];\n                } else if (matrix[idx] < indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx];\n                }\n            }\n        }\n    }\n    if (!index) {\n        throw Error('#N/A');\n    }\n    return index;\n}\n\nfunction match(lookupValue, matrix, matchType) {\n    if (Array.isArray(matrix)\n        && matrix.length === 1\n        && Array.isArray(matrix[0])) {\n        matrix = matrix[0];\n    }\n    if (!lookupValue && !matrix) {\n        throw Error('#N/A');\n    }\n    if (arguments.length === 2) {\n        matchType = 1;\n    }\n    if (!(matrix instanceof Array)) {\n        throw Error('#N/A');\n    }\n    if (matchType === 0) {\n        if (typeof lookupValue === 'string') {\n            return match_exactly_string(matrix, lookupValue);\n        } else {\n            return match_exactly_non_string(matrix, lookupValue);\n        }\n    } else if (matchType === 1) {\n        return match_less_than_or_equal(matrix, lookupValue);\n    } else if (matchType === -1) {\n        return match_greater_than_or_equal(matrix, lookupValue);\n    } else {\n        throw Error('#N/A');\n    }\n}\n\nfunction index(matrix, row_num, column_num) {\n    if (row_num <= matrix.length) {\n        var row = matrix[row_num - 1];\n        if (Array.isArray(row)) {\n            if (!column_num) {\n                return row;\n            } else if (column_num <= row.length) {\n                return row[column_num - 1];\n            }\n        } else {\n            return matrix[row_num];\n        }\n    }\n    throw Error('#REF!');\n}\n\n// impl ported from https://github.com/FormulaPages/hlookup\nfunction hlookup(needle, table, index, exactmatch) {\n    if (typeof needle === \"undefined\" || (0, is_blank)(needle)) {\n        throw Error('#N/A');\n    }\n\n    index = index || 0;\n    let row = table[0], i, searchingFor;\n\n    if (typeof needle === 'string') {\n        searchingFor = needle.toLowerCase();\n        for (i = 0; i < row.length; i++) {\n            if (exactmatch && row[i] === searchingFor || row[i].toLowerCase().indexOf(searchingFor) !== -1) {\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n            }\n        }\n    } else {\n        searchingFor = needle;\n        for (i = 0; i < row.length; i++) {\n            if (exactmatch && row[i] === searchingFor || row[i] === searchingFor) {\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n            }\n        }\n    }\n    throw Error('#N/A');\n}\n\nfunction len(a) {\n    return ('' + a).length;\n}\n\nfunction trim(a) {\n    return ('' + a).trim();\n}\n\nfunction is_blank(a) {\n    // console.log(a)\n    return !a;\n}\n\nfunction covariance_p(a, b) {\n    a = getArrayOfNumbers(a);\n    b = getArrayOfNumbers(b);\n    if (a.length != b.length) {\n        return 'N/D';\n    }\n    var inv_n = 1.0 / a.length;\n    var avg_a = sum.apply(this, a) / a.length;\n    var avg_b = sum.apply(this, b) / b.length;\n    var s = 0.0;\n    for (var i = 0; i < a.length; i++) {\n        s += (a[i] - avg_a) * (b[i] - avg_b);\n    }\n    return s * inv_n;\n}\n\nfunction getArrayOfNumbers(range) {\n    var arr = [];\n    for (var i = 0; i < range.length; i++) {\n        var arg = range[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                if (typeof(matrix[j]) == 'number') {\n                    arr.push(matrix[j]);\n                }\n                else if (Array.isArray(matrix[j])) {\n                    for (var k = matrix[j].length; k--;) {\n                        if (typeof(matrix[j][k]) == 'number') {\n                            arr.push(matrix[j][k]);\n                        }\n                    }\n                }\n                // else {\n                //   wtf is that?\n                // }\n            }\n        }\n        else {\n            if (typeof(arg) == 'number') {\n                arr.push(arg);\n            }\n        }\n    }\n    return arr;\n}\n\nfunction var_p() {\n    var average = avg.apply(this, arguments);\n    var s = 0.0;\n    var c = 0;\n    for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n                        s += Math.pow(matrix[j][k] - average, 2);\n                        c++;\n                    }\n                }\n            }\n        }\n        else {\n            s += Math.pow(arg - average, 2);\n            c++;\n        }\n    }\n    return s / c;\n}\n\nfunction EXP(n) {\n    return Math.pow(Math.E, n);\n}\n\nfunction avg() {\n    var aux = counta.apply(this, arguments);\n    if (aux == 0) {\n        throw Error('#DIV/0!');\n    }\n    return sum.apply(this, arguments) / aux;\n}\n\nfunction stDeviation() {\n    var array = getArrayOfNumbers(arguments);\n\n    function _mean(array) {\n        return array.reduce(function(a, b) {\n            return a + b;\n        }) / array.length;\n    }\n    var mean = _mean(array),\n        dev = array.map(function(itm) {\n            return (itm - mean) * (itm - mean);\n        });\n    return Math.sqrt(dev.reduce(function(a, b) {\n        return a + b;\n    }) / (array.length - 1));\n}\n\n/// Original C++ implementation found at http://www.wilmott.com/messageview.cfm?catid=10&threadid=38771\n/// C# implementation found at http://weblogs.asp.net/esanchez/archive/2010/07/29/a-quick-and-dirty-implementation-of-excel-norminv-function-in-c.aspx\n/*\n *     Compute the quantile function for the normal distribution.\n *\n *     For small to moderate probabilities, algorithm referenced\n *     below is used to obtain an initial approximation which is\n *     polished with a final Newton step.\n *\n *     For very large arguments, an algorithm of Wichura is used.\n *\n *  REFERENCE\n *\n *     Beasley, J. D. and S. G. Springer (1977).\n *     Algorithm AS 111: The percentage points of the normal distribution,\n *     Applied Statistics, 26, 118-121.\n *\n *      Wichura, M.J. (1988).\n *      Algorithm AS 241: The Percentage Points of the Normal Distribution.\n *      Applied Statistics, 37, 477-484.\n */\nfunction normsInv(p, mu, sigma) {\n    if (p < 0 || p > 1) {\n        throw \"The probality p must be bigger than 0 and smaller than 1\";\n    }\n    if (sigma < 0) {\n        throw \"The standard deviation sigma must be positive\";\n    }\n\n    if (p == 0) {\n        return -Infinity;\n    }\n    if (p == 1) {\n        return Infinity;\n    }\n    if (sigma == 0) {\n        return mu;\n    }\n\n    var q, r, val;\n\n    q = p - 0.5;\n\n    /*-- use AS 241 --- */\n    /* double ppnd16_(double *p, long *ifault)*/\n    /*      ALGORITHM AS241  APPL. STATIST. (1988) VOL. 37, NO. 3\n            Produces the normal deviate Z corresponding to a given lower\n            tail area of P; Z is accurate to about 1 part in 10**16.\n    */\n    if (Math.abs(q) <= .425) { /* 0.075 <= p <= 0.925 */\n        r = .180625 - q * q;\n        val =\n            q * (((((((r * 2509.0809287301226727 +\n                            33430.575583588128105) * r + 67265.770927008700853) * r +\n                        45921.953931549871457) * r + 13731.693765509461125) * r +\n                    1971.5909503065514427) * r + 133.14166789178437745) * r +\n                3.387132872796366608) / (((((((r * 5226.495278852854561 +\n                        28729.085735721942674) * r + 39307.89580009271061) * r +\n                    21213.794301586595867) * r + 5394.1960214247511077) * r +\n                687.1870074920579083) * r + 42.313330701600911252) * r + 1);\n    }\n    else { /* closer than 0.075 from {0,1} boundary */\n\n        /* r = min(p, 1-p) < 0.075 */\n        if (q > 0)\n            r = 1 - p;\n        else\n            r = p;\n\n        r = Math.sqrt(-Math.log(r));\n        /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\n\n        if (r <= 5) { /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\n            r += -1.6;\n            val = (((((((r * 7.7454501427834140764e-4 +\n                                .0227238449892691845833) * r + .24178072517745061177) *\n                            r + 1.27045825245236838258) * r +\n                        3.64784832476320460504) * r + 5.7694972214606914055) *\n                    r + 4.6303378461565452959) * r +\n                1.42343711074968357734) / (((((((r *\n                                1.05075007164441684324e-9 + 5.475938084995344946e-4) *\n                            r + .0151986665636164571966) * r +\n                        .14810397642748007459) * r + .68976733498510000455) *\n                    r + 1.6763848301838038494) * r +\n                2.05319162663775882187) * r + 1);\n        }\n        else { /* very close to  0 or 1 */\n            r += -5;\n            val = (((((((r * 2.01033439929228813265e-7 +\n                                2.71155556874348757815e-5) * r +\n                            .0012426609473880784386) * r + .026532189526576123093) *\n                        r + .29656057182850489123) * r +\n                    1.7848265399172913358) * r + 5.4637849111641143699) *\n                r + 6.6579046435011037772) / (((((((r *\n                            2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\n                        r + 1.8463183175100546818e-5) * r +\n                    7.868691311456132591e-4) * r + .0148753612908506148525) * r + .13692988092273580531) * r +\n                .59983220655588793769) * r + 1);\n        }\n\n        if (q < 0.0) {\n            val = -val;\n        }\n    }\n\n    return mu + sigma * val;\n}\n\nfunction irr(range, guess) {\n    var min = -2.0;\n    var max = 1.0;\n    var n = 0;\n    do {\n        var guest = (min + max) / 2;\n        var NPV = 0;\n        for (var i = 0; i < range.length; i++) {\n            var arg = range[i];\n            NPV += arg[0] / Math.pow((1 + guest), i);\n        }\n        if (NPV > 0) {\n            if (min === max) {\n                max += Math.abs(guest);\n            }\n            min = guest;\n        }\n        else {\n            max = guest;\n        }\n        n++;\n    } while (Math.abs(NPV) > 0.000001 && n < 100000);\n    //console.log(n);\n    return guest;\n}\n\nfunction counta() {\n    var r = 0;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n                        r++;\n                    }\n                }\n            }\n        }\n        else {\n            if (arg !== null && arg !== undefined) {\n                r++;\n            }\n        }\n    }\n    return r;\n}\n\nfunction pmt(rate_per_period, number_of_payments, present_value, future_value, type) {\n    type = type || 0;\n    future_value = future_value || 0;\n    if (rate_per_period != 0.0) {\n        // Interest rate exists\n        var q = Math.pow(1 + rate_per_period, number_of_payments);\n        return -(rate_per_period * (future_value + (q * present_value))) / ((-1 + q) * (1 + rate_per_period * (type)));\n\n    }\n    else if (number_of_payments != 0.0) {\n        // No interest rate, but number of payments exists\n        return -(future_value + present_value) / number_of_payments;\n    }\n    return 0;\n}\n\nfunction concatenate() {\n    var r = '';\n    for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (arg === null || arg === undefined) continue;\n        r += arg;\n    }\n    return r;\n}\n\nfunction sum() {\n    var r = 0;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (!isNaN(matrix[j][k])) {\n                        r += +matrix[j][k];\n                    }\n                }\n            }\n        }\n        else {\n            r += +arg;\n        }\n    }\n    return r;\n}\n\nfunction max() {\n    var max = null;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var arr = arg;\n            for (var j = arr.length; j--;) {\n                var col = arr[j];\n                if (Array.isArray(col)) {\n                    for (var k = col.length; k--;) {\n                        if (max == null || (col[k] != null && max < col[k])) {\n                            max = col[k];\n                        }\n                    }\n                }\n                else if (max == null || (col != null && max < col)) {\n                    max = col;\n                }\n            }\n        }\n        else if (!isNaN(arg) && (max == null || (arg != null && max < arg))) {\n            max = arg;\n        }\n    }\n    return max;\n}\n\nfunction min() {\n    var min = null;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var arr = arg;\n            for (var j = arr.length; j--;) {\n                var col = arr[j];\n                if (Array.isArray(col)) {\n                    for (var k = col.length; k--;) {\n                        if (min == null || (col[k] != null && min > col[k])) {\n                            min = col[k];\n                        }\n                    }\n                }\n                else if (min == null || (col != null && min > col)) {\n                    min = col;\n                }\n            }\n        }\n        else if (!isNaN(arg) && (min == null || (arg != null && min > arg))) {\n            min = arg;\n        }\n    }\n    return min;\n}\n\nfunction vlookup(key, matrix, return_index, range_lookup=true) {\n    var val = null;\n    for (var i = 0; i < matrix.length; i++) {\n        if (matrix[i][0] < key) {\n            val = matrix[i][return_index - 1];\n        }\n        else if (matrix[i][0] == key) {\n            return matrix[i][return_index - 1];\n        }\n    }\n    if (range_lookup && val) {\n        return val;\n    }\n    throw Error('#N/A');\n}\n\nfunction iserror() {\n    // if an error is catched before getting there, true will be returned from the catch block\n    // if we get here then it's not an error\n    return false;\n}\n\nfunction time(hours, minutes, seconds) {\n    const MS_PER_DAY = 24 * 60 * 60 * 1000;\n    return ((hours * 60 + minutes) * 60 + seconds) * 1000 / MS_PER_DAY;\n}\n\nfunction day(date) {\n    if (!date.getDate) {\n        throw Error('#VALUE!');\n    }\n    var day = date.getUTCDate();\n    if (isNaN(day)) {\n        throw Error('#VALUE!');\n    }\n    return day;\n}\n\nfunction month(date) {\n    if (!date.getMonth) {\n        throw Error('#VALUE!');\n    }\n    var month = date.getUTCMonth();\n    if (isNaN(month)) {\n        throw Error('#VALUE!');\n    }\n    return month + 1;\n}\n\nfunction year(date) {\n    if (!date.getFullYear) {\n        throw Error('#VALUE!');\n    }\n    var year = date.getUTCFullYear();\n    if (isNaN(year)) {\n        throw Error('#VALUE!');\n    }\n    return year;\n}\n\nfunction datediff(date1, date2, unit) {\n    date1 = new Date(date1);\n    date2 = new Date(date2);\n\n    if (!date1 || !date2 || date1 == 'Invalid Date' || date2 == 'Invalid Date') {\n        throw Error('#VALUE!');\n    }\n\n    unit = unit.replace(/[^DMY]/ig, \"\");\n\n    switch(unit) {\n        case \"M\":\n            return date2.getMonth() - date1.getMonth() + (12 * (date2.getFullYear() - date1.getFullYear()))\n        case \"Y\":\n            return  Math.abs(date2.getUTCFullYear() - date1.getUTCFullYear());\n        case \"D\": default: \n            var timeDiff = Math.abs(date2 - date1);\n            return Math.ceil(timeDiff / (1000 * 3600 * 24));\n    }\n}\n\nfunction eomonth(date, months) {\n    date = new Date(date);\n    if (!date || date == 'Invalid Date') {\n        throw Error('#VALUE!');\n    }\n    months = months || 0;\n    var endofmonth = new Date(date.getUTCFullYear(), date.getUTCMonth()+months+1, 0);\n    endofmonth.setUTCHours(0);\n    endofmonth.setUTCMinutes(0);\n    endofmonth.setUTCSeconds(0);   \n    return endofmonth;\n}\n\nfunction right(text, number) {\n    number = (number === undefined) ? 1 : parseFloat(number);\n\n    if (isNaN(number)) {\n        throw Error('#VALUE!');\n    }\n    if (text === undefined || text === null) {\n        text = '';\n    } else {\n        text = '' + text;\n    }\n    return text.substring(text.length - number);\n}\n\nfunction left(text, number) {\n    number = (number === undefined) ? 1 : parseFloat(number);\n\n    if (isNaN(number)) {\n        throw Error('#VALUE!');\n    }\n    if (text === undefined || text === null) {\n        text = '';\n    } else {\n        text = '' + text;\n    }\n    return text.substring(0, number);\n}\n\nfunction ifs(/*_cond1, _val1, _cond2, _val2, _cond3, _val3, ... */) {\n    for (var i = 0; i + 1 < arguments.length; i+=2) {\n        var cond = arguments[i];\n        var val = arguments[i+1];\n        if (cond) {\n            return val;\n        }\n    }\n    throw Error('#N/A');\n}\n\nfunction escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nfunction substitute(text, old_text, new_text, occurrence) {\n    if(occurrence <= 0) {\n      throw Error('#VALUE!');\n    }\n    if (!text || !old_text || (!new_text && new_text !== '')) {\n      return text;\n    } else if (occurrence === undefined) {\n      return text.replace(new RegExp(escapeRegExp(old_text), 'g'), new_text);\n    } else {\n      var index = 0;\n      var i = 0;\n      while (text.indexOf(old_text, index) > 0) {\n        index = text.indexOf(old_text, index + 1);\n        i++;\n        if (i === occurrence) {\n          return text.substring(0, index) + new_text + text.substring(index + old_text.length);\n        }\n      }\n    }\n  };\n\nfunction ceiling(number, significance) {\n    return Math.ceil(number / significance) * significance\n}\n/**\n * Filters an array based on a Boolean (True/False) array.\n *\n * Category: Lookup and reference\n *\n * @param {*} array The array, or range to filter. E.g. [[1,2,3],[4,5,6]]\n * @param {*} include A boolean array whose height or width is the same as the array. E.g. [[true, false, true]] OR [[true],[false]]\n * @param {*} if_empty Optional. The value to return if all values in the included array are empty (filter returns nothing). E.g. \"No results\"\n * @returns\n */\n function FILTER(array, include, if_empty) {\n    // correct types\n    if (!array || !include) {\n        return error.na\n    }\n\n    if (!(array instanceof Array)) {\n        return error.na\n    }\n\n    if (!(include instanceof Array)) {\n        return error.na\n    }\n\n    // array lengths must be greater than 0 and symmetrical\n    if (array.length === 0) {\n        return error.na\n    }\n\n    if (include.length === 0) {\n        return error.na\n    }\n\n    for (let i = 0; i < array.length; i++) {\n        if (!(array[i] instanceof Array)) {\n            return error.na\n        }\n\n        if (array[i].length === 0) {\n            return error.na\n        }\n\n        if (array[i].length !== array[0].length) {\n            return error.na\n        }\n    }\n\n    for (let i = 0; i < include.length; i++) {\n        if (!(include[i] instanceof Array)) {\n            return error.na\n        }\n\n        if (include[i].length === 0) {\n            return error.na\n        }\n\n        if (include[i].length !== include[0].length) {\n            return error.na\n        }\n    }\n\n    const arrayWidth = array[0].length\n    const arrayHeight = array.length\n    const includeWidth = include[0].length\n    const includeHeight = include.length\n\n    // include array must have same width or height as array (and generally not both)\n    if (arrayWidth !== includeWidth && arrayHeight !== includeHeight) {\n        return error.na\n    }\n\n    if (\n        arrayHeight > 1 &&\n        arrayWidth > 1 &&\n        ((arrayWidth === includeWidth && includeHeight !== 1) || (arrayHeight === includeHeight && includeWidth !== 1))\n    ) {\n        return error.na\n    }\n\n    if (\n        arrayHeight > 1 &&\n        arrayWidth === 1 &&\n        (includeWidth !== 1 || (includeHeight !== 1 && includeHeight !== arrayHeight))\n    ) {\n        return error.na\n    }\n\n    // filter\n    const result = []\n    for (let i = 0; i < arrayHeight; i++) {\n        const row = []\n        for (let j = 0; j < arrayWidth; j++) {\n            const value = getMatrixValueForFilter(include, i, j) || getMatrixValueForFilter(include, 0, j) || getMatrixValueForFilter(include, i, 0)\n            const bool = utils.parseBool(value)\n            if (bool === true) row.push(array[i][j])\n            else if (bool instanceof Error) return utils.addEmptyValuesToArray([[bool]], arrayWidth, arrayHeight)\n        }\n        if (row.length > 0) result.push(row)\n    }\n\n    if (result.length === 0) {\n        if (if_empty != null) {\n            return utils.addEmptyValuesToArray([[if_empty]], arrayWidth, arrayHeight)\n        }\n\n        return utils.addEmptyValuesToArray([[error.calc]], arrayWidth, arrayHeight)\n    }\n\n    return utils.addEmptyValuesToArray(result, arrayWidth, arrayHeight)\n}\n\nfunction getMatrixValueForFilter(matrix, i, j) {\n    if (matrix[i]) {\n        if (matrix[i][j] === false) {\n            return 'FALSE'\n        }\n        return matrix[i][j]\n    }\n}\n\nfunction throwErrors(someFormula) {\n    return function() {\n        const result = someFormula.apply(this, arguments);\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    }\n}\n\nmodule.exports = formulas;\n","\"use strict\";\n\nmodule.exports = function getSanitizedSheetName(sheet_name) {\n    var quotedMatch = sheet_name.match(/^'(.*)'$/);\n    if (quotedMatch) {\n        return quotedMatch[1];\n    }\n    else {\n        return sheet_name;\n    }\n};\n","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst exec_formula = require('./exec_formula.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\nconst Calculator = require('./Calculator.js');\n\nvar mymodule = function(workbook, options) {\n    var formulas = find_all_cells_with_formulas(workbook, exec_formula);\n    for (var i = formulas.length - 1; i >= 0; i--) {\n      try {\n        // https://github.com/fabiooshiro/xlsx-calc/issues/119\n        if (formulas[i].status === 'done') {\n          continue;\n        }\n        exec_formula(formulas[i]);\n      } catch (error) {\n        if (!options || !options.continue_after_error) {\n          throw error\n        }\n        if (options.log_error) {\n          console.log('error executing formula', 'sheet', formulas[i].sheet_name, 'cell', formulas[i].name, error)\n        }\n      }\n    }\n};\n\nmymodule.calculator = function calculator(workbook) {\n    return new Calculator(workbook, exec_formula);\n};\n\nmymodule.set_fx = exec_formula.set_fx;\nmymodule.exec_fx = exec_formula.exec_fx;\nmymodule.col_str_2_int = col_str_2_int;\nmymodule.int_2_col_str = int_2_col_str;\nmymodule.import_functions = exec_formula.import_functions;\nmymodule.import_raw_functions = exec_formula.import_raw_functions;\nmymodule.xlsx_Fx = exec_formula.xlsx_Fx;\nmymodule.localizeFunctions = exec_formula.localizeFunctions;\n\nmymodule.XLSX_CALC = mymodule\n\nmodule.exports = mymodule;\n","\"use strict\";\n\nmodule.exports = function int_2_col_str(n) {\n    var dividend = n + 1;\n    var columnName = '';\n    var modulo;\n    var guard = 10;\n    while (dividend > 0 && guard--) {\n        modulo = (dividend - 1) % 26;\n        columnName = String.fromCharCode(modulo + 65) + columnName;\n        dividend = (dividend - modulo - 1) / 26;\n    }\n    return columnName;\n};","const RawValue = require('./RawValue.js');\nconst RefValue = require('./RefValue.js');\nconst LazyValue = require('./LazyValue.js');\nconst Range = require('./Range.js');\n\n// this is used to _cache_ range names so that it doesn't need to be queried\n// every time a range is used\nlet definedNames, wb;\nfunction getDefinedName(buffer, formula) {\n    if (!(formula.wb.Workbook && formula.wb.Workbook.Names)) {\n        return null;\n    }\n    if (wb !== formula.wb) {\n        wb = formula.wb;\n        definedNames = null;\n        return getDefinedName(buffer, formula);\n    }\n    if (definedNames) {\n        return definedNames[buffer];\n    }\n    const keys = Object.values(formula.wb.Workbook.Names);\n    if (keys.length === 0) {\n        return;\n    }\n    definedNames = {};\n    keys.forEach(({ Name, Ref }) => {\n        if (!Name.includes('.')) {\n            definedNames[Name] = Ref;\n        }\n    });\n\n    return getDefinedName(buffer, formula);\n}\n\nmodule.exports = function str_2_val(buffer, formula) {\n    if (!isNaN(buffer)) {\n        return new RawValue(+buffer);\n    }\n    if (buffer === 'TRUE') {\n        return new RawValue(1);\n    }\n    if (buffer === 'FALSE') {\n        return new RawValue(0);\n    }\n    if (typeof buffer !== 'string') {\n        return buffer;\n    }\n\n    buffer = buffer.trim().replace(/\\$/g, '')\n\n    if (buffer.match(/^[A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/%$/)) {\n        var inner = str_2_val(buffer.substr(0, buffer.length-1), formula)\n        return new LazyValue(() => inner.calc() / 100)\n    }\n    if (getDefinedName(buffer, formula)) {\n        return str_2_val(getDefinedName(buffer, formula), formula);\n    }\n    return buffer;\n};\n","const error = require('./errors')\n\nfunction parseBool(bool) {\n    if (typeof bool === 'boolean') {\n        return bool\n    }\n\n    if (bool instanceof Error) {\n        return bool\n    }\n\n    if (typeof bool === 'number') {\n        return bool !== 0\n    }\n\n    if (typeof bool === 'string') {\n        const up = bool.toUpperCase()\n\n        if (up === 'TRUE') {\n            return true\n        }\n\n        if (up === 'FALSE') {\n            return false\n        }\n    }\n\n    if (bool instanceof Date && !isNaN(bool)) {\n        return true\n    }\n\n    return error.value\n}\n\n// E.g. addEmptyValuesToArray([[1]], 2, 2) => [[1, \"\"], [\"\", \"\"]]\nfunction addEmptyValuesToArray(array, requiredLength, requiredHeight) {\n    if (!array || !requiredLength || !requiredHeight) {\n        return array\n    }\n\n    if (requiredLength < 0 || requiredHeight < 0) {\n        return array\n    }\n\n    // array must be a square matrix\n    if (!Array.isArray(array) || !array.length) return array;\n    for (let i = 0; i < array.length; i++) {\n        if (!(array[i] instanceof Array)) return array\n    }\n\n    // add empty values to columns\n    for (let i = 0; i < array.length; i++) {\n        if (array[i].length < requiredLength) {\n            for (let j = array[i].length; j < requiredLength; j++) {\n                array[i].push('')\n            }\n        }\n    }\n\n    // add empty values to rows\n    if (array.length < requiredHeight) {\n        for (let i = array.length; i < requiredHeight; i++) {\n            array.push([])\n            for (let j = 0; j < requiredLength; j++) {\n                array[i].push('')\n            }\n        }\n    }\n\n    return array\n}\n\nmodule.exports = {\n    addEmptyValuesToArray,\n    parseBool,\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","RawValue","str_2_val","find_all_cells_with_formulas","constructor","workbook","exec_formula","expressions","variables","formulas","length","exp","build_expression","push","calcNames","setVar","var_name","value","variable","setValue","forEach","setVarOfExpression","getVars","vars","k","calc","Workbook","Names","item","val","getRef","Ref","Name","ref_name","Error","formula","formula_ref","wb","args","arg","name","execute","update_cell_value","MS_PER_DAY","col_str_2_int","int_2_col_str","dynamic_array_compatible","getErrorValueByMessage","exp_id","last_arg","self","applyCellError","cell","cellValueOrError","error","t","errorValue","message","undefined","w","v","applyCellValue","newCellType","getCellType","cellValue","isEmpty","checkVariable","obj","exec","op","fn","r","splice","b","e","toNegative","Array","isArray","map","id","array","colAndRow","match","colNumber","rowNumber","newCellNumber","j","newCellValue","destinationCellName","sheet","l","status","concat","getCurrentCellIndex","execNegativePow","Math","pow","Date","parse","exec_minus","string","getTime","toLowerCase","buffer","getSanitizedSheetName","str_expression","range_expression","sheet_name","indexOf","aux","split","Sheets","max_row","arr","min_row","parseInt","replace","str_max_row","includes","min_col","max_col","results","matrix","row","cell_name","cell_full_name","f","parseRef","resolved_ref","ref_cell","console","log","user_function","result","apply","col_str","colstr","charCodeAt","hasArray","parameters","numberOfRows","numberOfColumns","arguments","argument","parameter","maxNumberOfRows","max","maxNumberOfColumns","x","y","hasError","elements","element","xKey","yKey","na","nil","div0","ref","num","data","ERROR_MESSAGE_TO_VALUE","errorMessage","expression_builder","xlsx_Fx","xlsx_raw_Fx","import_raw_functions","functions","opts","key","import_functions","formulajs","prefix","override","my_assign","dest","source","JSON","stringify","set_fx","exec_fx","localizeFunctions","dic","newName","oldName","Exp","UserFnExecutor","UserRawFnExecutor","common_operations","root_exp","str_formula","substr","exp_obj","was_string","fn_stack","char","state","start","single_quote","stack","o","trim_buffer","trim","special","special_raw","ini_parentheses","pop","add_operation","cells","Range","RefValue","cell_ref","rows","columns","height","width","ref_value","parsed_ref","col","end_range_col","cols","onerrorvalue","isNaN","Infinity","condition","_then","_else","condition_results","then_results","else_results","condition_result","then_result","else_result","expressionWithRange","colRow","matrixRow","destinationColumn","destinationRow","utils","floor","abs","sqrt","return_index","range_lookup","sum","min","rate_per_period","number_of_payments","present_value","future_value","type","q","counta","range","guess","n","guest","NPV","normsInv","getArrayOfNumbers","mean","reduce","_mean","dev","itm","avg","E","var_p","covariance_p","is_blank","needle","table","index","exactmatch","searchingFor","row_num","column_num","lookupValue","matchType","idx","match_exactly_string","match_exactly_non_string","indexValue","match_less_than_or_equal","match_greater_than_or_equal","parseNumber","parseFloat","matrixArray","getRowCount","getColCount","rowCount","colCount","consistentSizeRanges","product","arrays","today","setHours","hours","minutes","seconds","date","getDate","day","getUTCDate","getMonth","month","getUTCMonth","getFullYear","year","getUTCFullYear","text","number","substring","decimalPlaces","round","roundMeasure","inv_n","avg_a","avg_b","s","sa","sb","elementToSum","sumResult","slice","call","elt","toString","option","old_text","new_text","occurrence","RegExp","significance","ceil","someFormula","include","if_empty","arrayWidth","arrayHeight","includeWidth","includeHeight","getMatrixValueForFilter","bool","parseBool","addEmptyValuesToArray","date1","date2","unit","timeDiff","months","endofmonth","setUTCHours","setUTCMinutes","setUTCSeconds","average","c","p","mu","sigma","quotedMatch","Calculator","mymodule","options","continue_after_error","log_error","calculator","XLSX_CALC","modulo","dividend","columnName","guard","String","fromCharCode","LazyValue","definedNames","getDefinedName","keys","Object","values","inner","requiredLength","requiredHeight","up","toUpperCase","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}